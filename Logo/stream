;; -*- logo -*-

to stream :car :delayed.cdr
output fput :car (list "delayed :delayed.cdr)
end

to stream.head :stream
output first :stream
end

to stream.tail :stream
if emptyp bf :stream [output []]
if not equalp first bf :stream "delayed [output bf :stream]
localmake "result run last :stream
.setbf :stream :result
output :result
end

to force.stream :stream [:limit 10]
if emptyp :stream [output []]
if zerop :limit [output [...]]
output fput stream.head :stream ~
            (force.stream stream.tail :stream :limit-1)
end

to integers.from :n
output stream :n se [integers.from] :n+1
end

make "integers integers.from 1

to stream.map :fun :stream
if emptyp :stream [output []]
output stream apply :fun (list stream.head :stream) ~
              `[stream.map ,[quoted :fun] stream.tail ,[:stream]]
end

to stream.filter :pred :stream
if emptyp :stream [output []]
if apply :pred (list stream.head :stream) ~
   [output stream stream.head :stream ~
                  `[stream.filter ,[quoted :pred] stream.tail ,[:stream]]
output stream.filter :pred stream.tail :stream
end
